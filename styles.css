/* Reset some default styles for the body */
body {
  height: 100vh;
  margin: 0;
  background-color: #000;
  font-size: .4vmin;
  display: grid;
  place-items: center;
  filter: saturate(2);
  cursor: none; /* Hide the cursor */
}

/* Common styles for various elements */
label, .scene, .dice, .face, :is(.face,label)::before, :is(.face,label)::after {
  position: absolute;
  transform-style: preserve-3d;
}

/* Styling for the 3D scene */
.scene {
  width: 100em;
  aspect-ratio: 1;
  perspective: 250em;
}

/* Remove default spacing for all children of .scene */
.scene * {
  inset: 0;
}

/* Styling for the rotating dice */
.dice {
  transform: rotateX(calc(acos(tan(30deg)))) rotateY(45deg);
  animation: spin 6s linear infinite;
}

/* Keyframes for the dice spinning animation */
@keyframes spin {
  100% {
    rotate: y 360deg; /* Typo: should be "rotateY" */
  }
}

/* Styling for each face of the dice */
.face {
  /* Gradient background for a face */
  background-image: repeating-radial-gradient(transparent 0, #000 7px), radial-gradient(at 0 0, hsl(calc(60deg*var(--step)) 100% 50% / .5), hsl(calc(60deg*(var(--step) + 1)) 100% 50% / .5));
  overflow: hidden;
  box-sizing: border-box;
  border: 2px solid hsl(calc(60deg*(var(--step) + .5)) 100% 50%);
  display: grid;
  grid-template-rows: repeat(3, 1fr);
  grid-template-columns: repeat(3, 1fr);
}

/* Pseudo-elements for the face rotation animation */
.face::before, .face::after {
  content: '';
  inset: calc((sin(45deg) - .5)*-100%);
  mix-blend-mode: multiply;
  animation: twirl 12s linear infinite;
  animation-delay: calc(-2s*var(--step));
}

/* Keyframes for the twirl animation of pseudo-elements */
@keyframes twirl {
  100% {
    rotate: 1turn;
  }
}

/* Styling for the before pseudo-element */
.face::before {
  background-image: conic-gradient(black,#fff,black 40%, #fff,black 60%, #fff,black 90%, #fff, black);  
}

/* Styling for the after pseudo-element */
.face::after {
  background-image: conic-gradient(black,#fff,black 30%, #fff,black 50%, #fff,black 60%, #fff, black);
  animation-direction: reverse;
}

/* Define unique styles for each face of the dice */
.face:nth-child(1) {
  --step: 0;
}

.face:nth-child(2) {
  --step: 1;
}

.face:nth-child(3) {
  --step: 2;
}

.face:nth-child(4) {
  --step: 3;
}

.face:nth-child(5) {
  --step: 4;
}

.face:nth-child(6) {
  --step: 5;
}

/* Styles for sides and lids */
.side {
  transform: rotateY(calc(90deg*var(--step))) translateZ(50em);
}

.lid {
  transform: rotateX(calc(90deg*var(--dir))) translateZ(50em);
}

/* Alternate direction for odd lids */
.lid:nth-child(odd) {
  --dir: 1;
}

/* Direction for even lids */
.lid:nth-child(2n) {
  --dir: -1;
}

/* Styling for dots on the dice faces */
.dot {
  background-image: radial-gradient(#fff 25%, #fff0 0);
  z-index: 1;
}

/* Hide specific dots based on conditions */
#one .dot:not(:nth-child(5)),
#two .dot:not(:nth-child(8n+1)),
#three .dot:not(:nth-child(4n+1)),
#four .dot:nth-child(5),
:is(#four,#five) .dot:nth-child(2n),
#six .dot:nth-child(3n+2) {
  visibility: hidden;
}

/* Hide input elements */
input {
  display: none;
}

/* Styling for labels */
label {
  width: max(50em, 90px);
  margin: 60px;
  aspect-ratio: 1;
  place-self: start;
  perspective: max(250em, 450px);
}

/* Styling for label pseudo-elements */
label::before, label::after {
  content: '';
  inset: 0;
  transition: all .4s ease-in-out;
}

/* Styling for label's before pseudo-element */
label::before {
  background-image: repeating-conic-gradient(at 100% 50%, transparent 0,black 1%), linear-gradient(0deg, yellow, orange 20%, red, fuchsia);
  background-size: 100% 100%, 100% 250%;
  clip-path: polygon(0 0, 100% 50%, 0 100%);
  transform: rotateY(90deg) translateZ(25em);
  border-left: 1px solid yellow;
}

/* Styling for label's after pseudo-element */
label::after {
  background-image: repeating-linear-gradient(transparent 0,black 2%), linear-gradient(45deg, purple, blue, green, yellow);
  background-size: 100% 100%, 100% 250%;
  clip-path: polygon(0 0, 0 100%, 35% 100%, 35% 0, 65% 0, 65% 100%, 100% 100%, 100% 0);
  transform: rotateY(-90deg) translateZ(25em);
  border: 1px solid;
  border-color: fuchsia transparent blue lime;
}

/* Pause animations when #playPause is unchecked */
#playPause:not(:checked) ~ .scene .dice,
#playPause:not(:checked) ~ .scene .face::before,
#playPause:not(:checked) ~ .scene .face::after {
  animation-play-state: paused;
}

/* Transform the label's after pseudo-element when #playPause is checked */
#playPause:checked ~ label::after,
#playPause:not(:checked) ~ label::before {
  transform: rotateY(0deg) translateZ(25em);
  background-position-y: 100%;
}

/* Styles for a list of cards */
.cards-list {
  margin-top: 40%;
  padding: auto;
  z-index: 0;
  width: 100%;
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;
}

/* Styles for individual cards */
.card {
  margin: 30px auto;
  width: 300px;
  height: 300px;
  border-radius: 40px;
  box-shadow: 5px 5px 30px 7px rgba(0,0,0,0.25), -5px -5px 30px 7px rgba(0,0,0,0.22);
  cursor: pointer;
  transition: 0.4s;
}

/* Styles for card images and titles */
.card .card_image {
  width: inherit;
  height: inherit;
  border-radius: 40px;
}

.card .card_image img {
  width: inherit;
  height: inherit;
  border-radius: 40px;
  object-fit: cover;
}

.card .card_title {
  text-align: center;
  border-radius: 0px 0px 40px 40px;
  font-family: sans-serif;
  font-weight: bold;
  font-size: 30px;
  margin-top: -80px;
  height: 40px;
}

/* Hover effect for cards */
.card:hover {
  transform: scale(0.9, 0.9);
  box-shadow: 5px 5px 30px 15px rgba(0,0,0,0.25), 
    -5px -5px 30px 15px rgba(0,0,0,0.22);
}

/* Styles for titles with white and black colors */
.title-white {
  color: white;
}

.title-black {
  color: black;
}

/* Media query for small screens */
@media all and (max-width: 500px) {
  .card-list {
    /* On small screens, we are no longer using row direction but column */
    flex-direction: column;
  }
}

/* Custom cursor styles */
#custom-cursor {
  width: 32px;
  height: 32px;
  background-image: url('icons8-cursor-94.png');
  background-size: cover;
  position: absolute;
  z-index: 9999;
  pointer-events: none;
}
